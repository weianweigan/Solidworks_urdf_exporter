<!--  $c6 SM  10/13/10 PRJ 21682. Chnages to support interface brightness theme and new 2016 style UI.  -->
<!--  $c5 PSB 04/08/10 SPR 549141 Make message area in taskpane have new "softer" colors  -->
<!--  $c4 DPS 06/12/09 SPR 500755: backout c3  -->
<!--  $c3 DPS 06/08/09 SPR 473552: fix list box colors  -->
<!--  $c2 DPS 03/27/08 moved tooltip style to common dictionary  -->
<!--  $c1 SM  03/19/08 created  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2006"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <LinearGradientBrush x:Key="TaskPane_TitleBannerBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#FFB0BBC8" />
        <GradientStop Offset="1" Color="#FFE8EBEE" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TaskPane_BGBrush" Color="#FFF7F7F7" />

    <SolidColorBrush x:Key="TaskPane_GBBorder" Color="#FF9CA2B9" />
    <SolidColorBrush x:Key="TaskPane_GBbgBrush" Color="#FFF7F7F7" />
    <SolidColorBrush x:Key="TaskPane_GBHeaderBrush" Color="#FFF7F7F7" />
    <SolidColorBrush x:Key="TaskPane_EnabledTextBrush" Color="#FF000000" />

    <!--<LinearGradientBrush x:Key="TaskPane_GBbgBrush" EndPoint="0,0" StartPoint="0,1">
    <GradientStop Color="#FFE9EBF5" Offset="0"/>
    <GradientStop Color="#FFDEE2ED" Offset="1"/>
    <GradientStop Color="#FFC9D1E0" Offset="0.893"/>
    <GradientStop Color="#FFC5CBDC" Offset="0.885"/>
  </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskPane_GBHeaderBrush" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#FFCBD1DE" Offset="0"/>
        <GradientStop Color="#FFF5F5F8" Offset="1"/>
        <GradientStop Color="#FFB9BFCB" Offset="0.521"/>
        <GradientStop Color="#FFCDD1DA" Offset="0.526"/>
    </LinearGradientBrush>-->
    <SolidColorBrush x:Key="TaskPane_TextboxBorder" Color="#FF848CA2" />
    <LinearGradientBrush x:Key="TopBanner_BGBrush" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Offset="0" Color="#FFACB0C3" />
        <GradientStop Offset="1" Color="#FFEEF1FD" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset="0.5" Color="#FFE3E5F0" />
        <GradientStop Offset="1.0" Color="#FFC6C5D7" />
    </LinearGradientBrush>
    <!--  Resource dictionary entries should be defined here.  -->
    <LinearGradientBrush x:Key="ExpanderShadowFill" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.5" Color="Transparent" />
        <GradientStop Offset="1" Color="#30111111" />
    </LinearGradientBrush>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{DynamicResource TaskPane_GBHeaderBrush}"
                        BorderBrush="{DynamicResource TaskPane_GBBorder}"
                        BorderThickness="0,1,0,0"
                        CornerRadius="0,0,0,0">
                        <Grid
                            Height="20"
                            Background="Transparent"
                            SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid
                                x:Name="arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <Path
                                    x:Name="arrow2_Copy"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Data="M 0,1.5 L 5,6 L 10,1.5"
                                    RenderTransformOrigin="0.5,0.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2"
                                    d:LayoutOverrides="Width, Height">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <!--  Path SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" x:Name="arrow2" Data="M 1,1.5 L 4.5,5 L 8,1.5" d:LayoutOverrides="Width, Height" HorizontalAlignment="Left" Margin="0,5,0,0" VerticalAlignment="Top"/  -->

                            </Grid>
                            <ContentPresenter
                                Grid.Column="0"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Data" TargetName="arrow2" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>-->
                            <Setter TargetName="arrow2_Copy" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="arrow2_Copy" Property="Margin" Value="0.3,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Stroke" TargetName="arrow2" Value="#222"/>-->
                            <Setter TargetName="arrow2_Copy" Property="Stroke" Value="#FF222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                    Stroke="DarkGray" />
                                <Ellipse
                                    x:Name="shadow"
                                    Width="17"
                                    Height="17"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ExpanderShadowFill}"
                                    Visibility="Hidden" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5  L 4.5,5  L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#666" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            <Setter TargetName="shadow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                    Stroke="DarkGray" />
                                <Ellipse
                                    x:Name="shadow"
                                    Width="17"
                                    Height="17"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ExpanderShadowFill}"
                                    Visibility="Hidden" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5  L 4.5,5  L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#666" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            <Setter TargetName="shadow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                    Stroke="DarkGray" />
                                <Ellipse
                                    x:Name="shadow"
                                    Width="17"
                                    Height="17"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{DynamicResource ExpanderShadowFill}"
                                    Visibility="Hidden" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="#666" />
                            <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            <Setter TargetName="shadow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskPane_StackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="{DynamicResource TopBanner_BGBrush}" />
        <Setter Property="BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect ShadowDepth="3" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskPaneTitle_TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskPane_ExpanderStyle" TargetType="{x:Type Expander}">
        <!--  Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/  -->
        <Setter Property="Foreground" Value="{DynamicResource TaskPane_EnabledTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Margin="8,4,8,4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontSize="11"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontWeight="Bold"
                                Foreground="{DynamicResource TaskPane_EnabledTextBrush}"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <Border
                                x:Name="contentBG"
                                Background="{DynamicResource TaskPane_GBbgBrush}"
                                BorderBrush="{DynamicResource TaskPane_GBBorder}"
                                BorderThickness="0,0,0,0"
                                CornerRadius="0,0,0,0"
                                DockPanel.Dock="Bottom"
                                Visibility="Collapsed">
                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    Focusable="false"
                                    Visibility="Collapsed" />
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentBG" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskPane_LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource TaskPane_EnabledTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                        Margin="0,0,0,5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#FFA5ACB2" />
    <Style x:Key="TaskPane_TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource TaskPane_TextboxBorder}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TaskPane_Control_StackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="10,5,10,5" />
    </Style>
    <SolidColorBrush x:Key="StackButtonDivider_Brush" Color="#FF5E6474" />
    <LinearGradientBrush x:Key="MorePropButton_BackdropBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF707484" />
        <GradientStop Offset="1" Color="#FF9196A6" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MessageBG_Brush" Color="#FFFFFF80" />

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource TaskPane_EnabledTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource TaskPane_EnabledTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>